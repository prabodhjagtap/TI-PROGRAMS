#include "driverlib.h"
#include "device.h"

void Switch1();
void Switch2();

void main(void)
{

    Device_init();

    Interrupt_initModule();

    Interrupt_initVectorTable();

    GPIO_setPinConfig(3);
    GPIO_setPadConfig(3, GPIO_PIN_TYPE_STD | GPIO_PIN_TYPE_PULLUP);
    GPIO_setDirectionMode(3, GPIO_DIR_MODE_IN);
    GPIO_setQualificationMode(3, GPIO_QUAL_SYNC);
    GPIO_setControllerCore(3, GPIO_CORE_CPU1);
    GPIO_setPinConfig(6);
    GPIO_setPadConfig(6, GPIO_PIN_TYPE_STD | GPIO_PIN_TYPE_PULLUP);
    GPIO_setDirectionMode(6, GPIO_DIR_MODE_IN);
    GPIO_setQualificationMode(6, GPIO_QUAL_SYNC);
    GPIO_setControllerCore(6, GPIO_CORE_CPU1);

    GPIO_setPinConfig(10);
    GPIO_setPadConfig(10, GPIO_PIN_TYPE_STD);
    GPIO_setDirectionMode(10, GPIO_DIR_MODE_OUT);
    GPIO_setPinConfig(11);
    GPIO_setPadConfig(11, GPIO_PIN_TYPE_STD);
    GPIO_setDirectionMode(11, GPIO_DIR_MODE_OUT);


    GPIO_setInterruptType(GPIO_INT_XINT1, GPIO_INT_TYPE_FALLING_EDGE);
    GPIO_setInterruptPin(3, GPIO_INT_XINT1);
    GPIO_enableInterrupt(GPIO_INT_XINT1);
    GPIO_setInterruptType(GPIO_INT_XINT2, GPIO_INT_TYPE_FALLING_EDGE);
    GPIO_setInterruptPin(6, GPIO_INT_XINT2);
    GPIO_enableInterrupt(GPIO_INT_XINT2);



    Interrupt_register(INT_XINT1, &Switch1);
    Interrupt_enable(INT_XINT1);
    Interrupt_register(INT_XINT2, &Switch2);
    Interrupt_enable(INT_XINT2);

    Interrupt_enableMaster();

    while(1){

    }

}

__interrupt void Switch1(){
    int i=0;
            for(i=0;i<6;i++){
            GPIO_writePin(10,1);
            DEVICE_DELAY_US(2000000);
            GPIO_writePin(10,0);
            DEVICE_DELAY_US(2000000);
            i++;
            }
    Interrupt_clearACKGroup(INTERRUPT_ACK_GROUP1);
}

__interrupt void Switch2(){
        int i=0;
        for(i=0;i<6;i++){
        GPIO_writePin(11,1);
        DEVICE_DELAY_US(1000000);
        GPIO_writePin(11,0);
        DEVICE_DELAY_US(1000000);
        i++;
        }
        Interrupt_clearACKGroup(INTERRUPT_ACK_GROUP1);
}
